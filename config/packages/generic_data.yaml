substitutions:
  ble_uuid_generic_data_characteristic: ${ble_uuid_prefix}df
  ble_uuid_generic_command_characteristic: ${ble_uuid_prefix}dd
  generic_data_prefix: Generic Data
  generic_data_id_prefix: generic_data

globals:
  - id: g_generic_data_raw
    type: std::string
    restore_value: no

text_sensor:
  - platform: template
    name: "Mode"
    id: ${generic_data_id_prefix}_charge_mode
    icon: mdi:speedometer
    update_interval: 60s
  - platform: template
    name: "Network Type"
    id: ${generic_data_id_prefix}_network_type
    icon: mdi:transmission-tower
    update_interval: 60s
  - platform: ble_client
    id: ${device_name}_generic_data
    internal: true
    ble_client_id: ${device_name}_ble_client_id
    service_uuid: ${ble_uuid_receive_service}
    characteristic_uuid: ${ble_uuid_generic_data_characteristic}
    notify: true
    update_interval: never
    on_notify:
      then:
        lambda: |-
            auto hex_data = format_hex_pretty((uint8_t *) x.c_str(), x.size());
            ESP_LOGD("${device_name}_generic_data", "%s", hex_data.c_str());
            id(g_${generic_data_id_prefix}_raw) = x.c_str();

            if (x.size() == 51) {
              // Extract the charge_mode
              int charge_mode = x[10] & 0xFF;
              // Publish the charge mode
              String charge_mode_string;
              switch (charge_mode) {
                  case 0:
                      charge_mode_string = "Eco Private";
                      break;
                  case 1:
                      charge_mode_string = "Max Private";
                      break;
                  case 4:
                      charge_mode_string = "Eco Open";
                      break;
                  case 5:
                      charge_mode_string = "Max Open";
                      break;
                  default:
                      charge_mode_string = "unknown";
              }
              id(${generic_data_id_prefix}_charge_mode).publish_state(charge_mode_string.c_str());

              // Extract the network_type
              int network_type = x[26] & 0xFF;
              ESP_LOGD("network_type", "Value at index 26: %d", network_type);

              // Publish the charge mode
              String network_type_string;
              switch (network_type) {
                  case 0:
                      network_type_string = "Mono/Tri+N";
                      break;
                  case 3:
                      network_type_string = "Tri";
                      break;
                  default:
                      network_type_string = "unknown";
              }
              id(${generic_data_id_prefix}_network_type).publish_state(network_type_string.c_str());

              // Extract the app_as_key
              int app_as_key_int = x[22] & 0xFF;
              ESP_LOGD("app_as_key_int", "Value at index 22: %d", app_as_key_int);

              switch (app_as_key_int) {
                  case 0:
                      id(app_as_key).turn_on();
                      break;
                  default:
                      id(app_as_key).turn_off();
                      break;
              }
            }
switch:
  - platform: template
    name: "App as key"
    id: app_as_key
    icon: mdi:cellphone-key
    turn_on_action:
      - logger.log: "App as key turned On!" #TODO Write change

button:
  - platform: template
    name: "Read config"
    id: read_config_button
    on_press:
      - ble_client.ble_write:
          id: ${device_name}_ble_client_id
          service_uuid: ${ble_uuid_receive_service}
          characteristic_uuid: ${ble_uuid_generic_command_characteristic}
          value: [0x04, 0x50]
  - platform: template
    name: "Start Charge Default"
    on_press:
      - ble_client.ble_write:
          id: ${device_name}_ble_client_id
          service_uuid: ${ble_uuid_receive_service}
          characteristic_uuid: ${ble_uuid_generic_command_characteristic}
          value: [0x01, 0x00]
  - platform: template
    name: "Start Charge Max"
    on_press:
      - ble_client.ble_write:
          id: ${device_name}_ble_client_id
          service_uuid: ${ble_uuid_receive_service}
          characteristic_uuid: ${ble_uuid_generic_command_characteristic}
          value: [0x02, 0x00]
  - platform: template
    name: "Start Charge Auto"
    on_press:
      - ble_client.ble_write:
          id: ${device_name}_ble_client_id
          service_uuid: ${ble_uuid_receive_service}
          characteristic_uuid: ${ble_uuid_generic_command_characteristic}
          value: [0x03, 0x00]
  - platform: template
    name: "Start Charge Eco"
    on_press:
      - ble_client.ble_write:
          id: ${device_name}_ble_client_id
          service_uuid: ${ble_uuid_receive_service}
          characteristic_uuid: ${ble_uuid_generic_command_characteristic}
          value: [0x04, 0x00]
  - platform: template
    name: "Start Charge Stop"
    on_press:
      - ble_client.ble_write:
          id: ${device_name}_ble_client_id
          service_uuid: ${ble_uuid_receive_service}
          characteristic_uuid: ${ble_uuid_generic_command_characteristic}
          value: [0x06, 0x00]
